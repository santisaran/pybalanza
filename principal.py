#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Sun Nov 28 17:03:41 2010

import wx
import os
# begin wxGlade: extracode
# end wxGlade

def opj(path):
    """Convert paths to the platform-specific separator"""
    st = apply(os.path.join, tuple(path.split('/')))
    # HACK: on Linux, a leading / gets lost...
    if path.startswith('/'):
        st = '/' + st
    return st



class MySplashScreen(wx.SplashScreen):
    def __init__(self):
        bmp = wx.Image(opj("images/balance_h.png")).ConvertToBitmap()
        wx.SplashScreen.__init__(self, bmp,
                                 wx.SPLASH_CENTRE_ON_SCREEN | wx.SPLASH_TIMEOUT,
                                 2000, None, -1)
        self.Bind(wx.EVT_CLOSE, self.OnClose)
        self.fc = wx.FutureCall(2000, self.ShowMain)


    def OnClose(self, evt):
        # Make sure the default handler runs too so this window gets
        # destroyed
        evt.Skip()
        self.Hide()
        
        # if the timer is still running then go ahead and show the
        # main frame now
        if self.fc.IsRunning():
            self.fc.Stop()
            self.ShowMain()


    def ShowMain(self):
        frame = wxPythonDemo(None, "wxPython: (A Demonstration)")
        frame.Show()
        if self.fc.IsRunning():
            self.Raise()
        wx.CallAfter(frame.ShowTip)

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "")
        self.combo_box_1 = wx.ComboBox(self, -1, choices=["Gramos", "Kilos", "Libras"], style=wx.CB_DROPDOWN)
        self.text_ctrl_registro = wx.TextCtrl(self, -1, "123\n234\n345\n456\n567\n678\n789\n123\n345\n456\n567\n678\n", style=wx.TE_MULTILINE|wx.TE_READONLY|wx.HSCROLL|wx.TE_RIGHT)
        self.button_1 = wx.Button(self, -1, "button_1")
        self.button_2 = wx.Button(self, -1, "button_2")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        menuBar = MyMenuBar()
        self.SetMenuBar(menuBar)
        splash = MySplashScreen()
        splash.Show()
        splash.SetBackgroundStyle(wx.BG_STYLE_CUSTOM)
        
        
    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame_1")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap(opj("images/balance.png"), wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.combo_box_1.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1_2_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1_1.Add(self.text_ctrl_1, 1, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1_1.Add(self.combo_box_1, 1, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_1_1, 0, wx.EXPAND, 0)
        sizer_1_2.Add(self.text_ctrl_registro, 1, wx.EXPAND, 0)
        sizer_1_2_1.Add(self.button_1, 1, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1_2_1.Add(self.button_2, 1, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1_2.Add(sizer_1_2_1, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_1_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class MyFrame


class MyMenuBar(wx.MenuBar):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyMenuBar.__init__
        wx.MenuBar.__init__(self, *args, **kwds)
        self.archivo = wx.Menu()
        self.abrir = wx.MenuItem(self.archivo, wx.NewId(), "Abrir", "", wx.ITEM_NORMAL)
        self.archivo.AppendItem(self.abrir)
        self.close = wx.MenuItem(self.archivo, wx.NewId(), "Cerrar", "", wx.ITEM_NORMAL)
        self.archivo.AppendItem(self.close)
        self.archivo.AppendSeparator()
        self.exit = wx.MenuItem(self.archivo, wx.NewId(), "Salir", "", wx.ITEM_NORMAL)
        self.archivo.AppendItem(self.exit)
        self.Append(self.archivo, "Archivo")
        self.edicion = wx.Menu()
        self.Append(self.edicion, u"Edici√≥n")
        self.ayuda = wx.Menu()
        self.Append(self.ayuda, "Ayuda")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyMenuBar.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyMenuBar.__do_layout
        pass
        # end wxGlade

# end of class MyMenuBar


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    frame_1.Center()
    app.MainLoop()
